{"ast":null,"code":"var _jsxFileName = \"/home/joe/public_html/creativeproject-7joe-jon/comps/metricsChart.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Radar } from \"react-chartjs-2\";\n\nvar MetricsChart = function MetricsChart(props) {\n  // console.log(props.data.metrics);//ARRAY OF SONG METRICS\n  var danceability = 0;\n  var energy = 0;\n  var liveness = 0;\n  var loudness = 0;\n  var tempo = 0;\n  var valence = 0;\n  var acousticness = 0;\n  var instrumentalness = 0;\n  var speechiness = 0;\n  var numSongs = props.data.metrics.length;\n  console.log(numSongs);\n  props.data.metrics.forEach(function (song, index) {\n    danceability += song.danceability;\n    energy += song.energy;\n    liveness += song.liveness;\n    loudness += song.loudness;\n    tempo += song.tempo;\n    valence += song.valence;\n    acousticness += song.acousticness;\n    instrumentalness += song.instrumentalness;\n    speechiness += song.speechiness;\n  });\n  danceability = danceability / numSongs;\n  energy = energy / numSongs;\n  liveness = liveness / numSongs;\n  loudness = loudness / numSongs;\n  tempo = tempo / numSongs;\n  valence = valence / numSongs;\n  acousticness = acousticness / numSongs;\n  instrumentalness = instrumentalness / numSongs;\n  speechiness = speechiness / numSongs;\n  console.log(props.data.playlist);\n  var radarData = {\n    labels: ['Danceability', 'Energy', 'Liveness', 'Valence', 'Acouticness', 'Instrumentalness', 'Speechiness'],\n    datasets: [{\n      backgroundColor: 'rgba(255, 255, 153, 0.2)',\n      borderColor: '#1DB954',\n      pointBorderColor: 'rgba(255, 255, 153, 1)',\n      // pointBackgroundColor: 'rgba(255, 255, 153, 1)',\n      pointRadius: 1,\n      data: [danceability, energy, liveness, valence, acousticness, instrumentalness, speechiness]\n    }],\n    options: {\n      maintainAspectRatio: false,\n      responsive: true\n    }\n  };\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, __jsx(Radar, {\n    data: radarData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }));\n};\n\nexport default MetricsChart;","map":{"version":3,"sources":["/home/joe/public_html/creativeproject-7joe-jon/comps/metricsChart.js"],"names":["React","Radar","MetricsChart","props","danceability","energy","liveness","loudness","tempo","valence","acousticness","instrumentalness","speechiness","numSongs","data","metrics","length","console","log","forEach","song","index","playlist","radarData","labels","datasets","backgroundColor","borderColor","pointBorderColor","pointRadius","options","maintainAspectRatio","responsive"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,iBAApB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAC5B;AACA,MAAIC,YAAY,GAAC,CAAjB;AACA,MAAIC,MAAM,GAAC,CAAX;AACA,MAAIC,QAAQ,GAAC,CAAb;AACA,MAAIC,QAAQ,GAAC,CAAb;AACA,MAAIC,KAAK,GAAC,CAAV;AACA,MAAIC,OAAO,GAAC,CAAZ;AACA,MAAIC,YAAY,GAAC,CAAjB;AACA,MAAIC,gBAAgB,GAAC,CAArB;AACA,MAAIC,WAAW,GAAC,CAAhB;AACA,MAAIC,QAAQ,GAAGV,KAAK,CAACW,IAAN,CAAWC,OAAX,CAAmBC,MAAlC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACAV,EAAAA,KAAK,CAACW,IAAN,CAAWC,OAAX,CAAmBI,OAAnB,CAA2B,UAACC,IAAD,EAAOC,KAAP,EAAiB;AACxCjB,IAAAA,YAAY,IAAIgB,IAAI,CAAChB,YAArB;AACAC,IAAAA,MAAM,IAAIe,IAAI,CAACf,MAAf;AACAC,IAAAA,QAAQ,IAAIc,IAAI,CAACd,QAAjB;AACAC,IAAAA,QAAQ,IAAGa,IAAI,CAACb,QAAhB;AACAC,IAAAA,KAAK,IAAIY,IAAI,CAACZ,KAAd;AACAC,IAAAA,OAAO,IAAIW,IAAI,CAACX,OAAhB;AACAC,IAAAA,YAAY,IAAEU,IAAI,CAACV,YAAnB;AACAC,IAAAA,gBAAgB,IAAES,IAAI,CAACT,gBAAvB;AACAC,IAAAA,WAAW,IAAEQ,IAAI,CAACR,WAAlB;AACH,GAVD;AAWAR,EAAAA,YAAY,GAAGA,YAAY,GAACS,QAA5B;AACAR,EAAAA,MAAM,GAACA,MAAM,GAACQ,QAAd;AACAP,EAAAA,QAAQ,GAACA,QAAQ,GAACO,QAAlB;AACAN,EAAAA,QAAQ,GAACA,QAAQ,GAACM,QAAlB;AACAL,EAAAA,KAAK,GAACA,KAAK,GAACK,QAAZ;AACAJ,EAAAA,OAAO,GAACA,OAAO,GAACI,QAAhB;AACAH,EAAAA,YAAY,GAACA,YAAY,GAACG,QAA1B;AACAF,EAAAA,gBAAgB,GAACA,gBAAgB,GAACE,QAAlC;AACAD,EAAAA,WAAW,GAACA,WAAW,GAACC,QAAxB;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYf,KAAK,CAACW,IAAN,CAAWQ,QAAvB;AACA,MAAMC,SAAS,GAAG;AACdC,IAAAA,MAAM,EAAE,CAAC,cAAD,EAAiB,QAAjB,EAA2B,UAA3B,EAAuC,SAAvC,EAAkD,aAAlD,EAAiE,kBAAjE,EAAqF,aAArF,CADM;AAEdC,IAAAA,QAAQ,EAAE,CACR;AAEEC,MAAAA,eAAe,EAAE,0BAFnB;AAGEC,MAAAA,WAAW,EAAG,SAHhB;AAIEC,MAAAA,gBAAgB,EAAE,wBAJpB;AAKE;AACAC,MAAAA,WAAW,EAAE,CANf;AAOEf,MAAAA,IAAI,EAAE,CAACV,YAAD,EAAeC,MAAf,EAAuBC,QAAvB,EAAiCG,OAAjC,EAA0CC,YAA1C,EAAwDC,gBAAxD,EAA0EC,WAA1E;AAPR,KADQ,CAFI;AAadkB,IAAAA,OAAO,EAAE;AACLC,MAAAA,mBAAmB,EAAE,KADhB;AAELC,MAAAA,UAAU,EAAE;AAFP;AAbK,GAAlB;AAkBA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD;AAAO,IAAA,IAAI,EAAET,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADF;AAKD,CAzDH;;AA2DE,eAAerB,YAAf","sourcesContent":["import React from \"react\";\r\nimport {Radar} from \"react-chartjs-2\";\r\n\r\nconst MetricsChart = (props) => {\r\n    // console.log(props.data.metrics);//ARRAY OF SONG METRICS\r\n    let danceability=0;\r\n    let energy=0;\r\n    let liveness=0;\r\n    let loudness=0;\r\n    let tempo=0;\r\n    let valence=0;\r\n    let acousticness=0;\r\n    let instrumentalness=0;\r\n    let speechiness=0;\r\n    let numSongs = props.data.metrics.length;\r\n    console.log(numSongs);\r\n    props.data.metrics.forEach((song, index) => {\r\n        danceability += song.danceability;\r\n        energy += song.energy;\r\n        liveness += song.liveness;\r\n        loudness +=song.loudness;\r\n        tempo += song.tempo;\r\n        valence += song.valence;\r\n        acousticness+=song.acousticness;\r\n        instrumentalness+=song.instrumentalness;\r\n        speechiness+=song.speechiness;\r\n    });\r\n    danceability = danceability/numSongs;\r\n    energy=energy/numSongs;\r\n    liveness=liveness/numSongs;\r\n    loudness=loudness/numSongs;\r\n    tempo=tempo/numSongs;\r\n    valence=valence/numSongs;\r\n    acousticness=acousticness/numSongs;\r\n    instrumentalness=instrumentalness/numSongs;\r\n    speechiness=speechiness/numSongs;\r\n    console.log(props.data.playlist);\r\n    const radarData = {\r\n        labels: ['Danceability', 'Energy', 'Liveness', 'Valence', 'Acouticness', 'Instrumentalness', 'Speechiness'],\r\n        datasets: [\r\n          {\r\n            \r\n            backgroundColor: 'rgba(255, 255, 153, 0.2)',\r\n            borderColor:  '#1DB954',\r\n            pointBorderColor: 'rgba(255, 255, 153, 1)',\r\n            // pointBackgroundColor: 'rgba(255, 255, 153, 1)',\r\n            pointRadius: 1,\r\n            data: [danceability, energy, liveness, valence, acousticness, instrumentalness, speechiness]\r\n          }\r\n        ],\r\n        options: {\r\n            maintainAspectRatio: false,\r\n            responsive: true,\r\n        }\r\n      }\r\n    return (\r\n      <div>\r\n          <Radar data={radarData} />\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  export default MetricsChart;"]},"metadata":{},"sourceType":"module"}