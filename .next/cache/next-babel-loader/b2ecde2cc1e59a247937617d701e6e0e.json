{"ast":null,"code":"var _jsxFileName = \"/home/joe/public_html/creativeproject-7joe-jon/comps/metricsChart.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Radar } from \"react-chartjs-2\";\n\nconst MetricsChart = props => {\n  let danceability = 0;\n  let energy = 0;\n  let liveness = 0;\n  let loudness = 0;\n  let tempo = 0;\n  let valence = 0;\n  let acousticness = 0;\n  let instrumentalness = 0;\n  let speechiness = 0;\n  let numSongs = props.data.metrics.length;\n  props.data.metrics.forEach((song, index) => {\n    danceability += song.danceability;\n    energy += song.energy;\n    liveness += song.liveness;\n    loudness += song.loudness;\n    tempo += song.tempo;\n    valence += song.valence;\n    acousticness += song.acousticness;\n    instrumentalness += song.instrumentalness;\n    speechiness += song.speechiness;\n  });\n  danceability = danceability / numSongs;\n  energy = energy / numSongs;\n  liveness = liveness / numSongs;\n  loudness = loudness / numSongs;\n  tempo = tempo / numSongs;\n  valence = valence / numSongs;\n  acousticness = acousticness / numSongs;\n  instrumentalness = instrumentalness / numSongs;\n  speechiness = speechiness / numSongs;\n  const radarData = {\n    labels: ['Danceability', 'Energy', 'Liveness', 'Valence', 'Acoutiscness', 'Instrumentalness', 'Speechiness'],\n    datasets: [{\n      backgroundColor: 'rgba(30, 215, 96, 0.4)',\n      borderColor: 'white',\n      // // pointBackgroundColor: 'rgba(255, 255, 153, 1)',\n      // pointRadius: 1,\n      // spanGaps: true,\n      label: \"Playlist Analysis\",\n      radius: 6,\n      pointRadius: 6,\n      pointBorderWidth: 3,\n      pointBackgroundColor: \"#1DB954\",\n      pointBorderColor: \"white\",\n      pointHoverRadius: 10,\n      data: [danceability, energy, liveness, valence, acousticness, instrumentalness, speechiness]\n    }],\n    options: {\n      maintainAspectRatio: false,\n      responsive: true\n    }\n  };\n  var chartOptions = {\n    scale: {\n      ticks: {\n        beginAtZero: true,\n        min: 0,\n        max: 1,\n        stepSize: 0.2,\n        fontSize: 12\n      },\n      pointLabels: {\n        fontSize: 18,\n        fontColor: \"#A9A9A9\"\n      },\n      gridLines: {\n        display: true,\n        color: '#A9A9A9'\n      },\n      legend: {\n        display: false\n      }\n    }\n  };\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, __jsx(Radar, {\n    data: radarData,\n    options: chartOptions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }));\n};\n\nexport default MetricsChart;","map":{"version":3,"sources":["/home/joe/public_html/creativeproject-7joe-jon/comps/metricsChart.js"],"names":["React","Radar","MetricsChart","props","danceability","energy","liveness","loudness","tempo","valence","acousticness","instrumentalness","speechiness","numSongs","data","metrics","length","forEach","song","index","radarData","labels","datasets","backgroundColor","borderColor","label","radius","pointRadius","pointBorderWidth","pointBackgroundColor","pointBorderColor","pointHoverRadius","options","maintainAspectRatio","responsive","chartOptions","scale","ticks","beginAtZero","min","max","stepSize","fontSize","pointLabels","fontColor","gridLines","display","color","legend"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {Radar} from \"react-chartjs-2\";\r\n\r\nconst MetricsChart = (props) => {\r\n\r\n    let danceability=0;\r\n    let energy=0;\r\n    let liveness=0;\r\n    let loudness=0;\r\n    let tempo=0;\r\n    let valence=0;\r\n    let acousticness=0;\r\n    let instrumentalness=0;\r\n    let speechiness=0;\r\n    let numSongs = props.data.metrics.length;\r\n    props.data.metrics.forEach((song, index) => {\r\n        danceability += song.danceability;\r\n        energy += song.energy;\r\n        liveness += song.liveness;\r\n        loudness +=song.loudness;\r\n        tempo += song.tempo;\r\n        valence += song.valence;\r\n        acousticness+=song.acousticness;\r\n        instrumentalness+=song.instrumentalness;\r\n        speechiness+=song.speechiness;\r\n    });\r\n    danceability = danceability/numSongs;\r\n    energy=energy/numSongs;\r\n    liveness=liveness/numSongs;\r\n    loudness=loudness/numSongs;\r\n    tempo=tempo/numSongs;\r\n    valence=valence/numSongs;\r\n    acousticness=acousticness/numSongs;\r\n    instrumentalness=instrumentalness/numSongs;\r\n    speechiness=speechiness/numSongs;\r\n\r\n    const radarData = {\r\n        labels: ['Danceability', 'Energy', 'Liveness', 'Valence', 'Acoutiscness', 'Instrumentalness', 'Speechiness'],\r\n        datasets: [\r\n          {\r\n            \r\n            backgroundColor: 'rgba(30, 215, 96, 0.4)',\r\n            borderColor:  'white',\r\n            // // pointBackgroundColor: 'rgba(255, 255, 153, 1)',\r\n            // pointRadius: 1,\r\n            // spanGaps: true,\r\n            label: \"Playlist Analysis\",\r\n    radius: 6,\r\n    pointRadius: 6,\r\n    pointBorderWidth: 3,\r\n    pointBackgroundColor: \"#1DB954\",\r\n    pointBorderColor: \"white\",\r\n    pointHoverRadius: 10,\r\n\r\n            data: [danceability, energy, liveness, valence, acousticness, instrumentalness, speechiness],\r\n          }\r\n        ],\r\n        options: {\r\n            maintainAspectRatio: false,\r\n            responsive: true,\r\n        }\r\n      }\r\n      var chartOptions = {\r\n        scale: {\r\n          ticks: {\r\n            beginAtZero: true,\r\n            min: 0,\r\n            max: 1,\r\n            stepSize: 0.2,\r\n            fontSize: 12\r\n          },\r\n          pointLabels: {\r\n            fontSize: 18,\r\n            fontColor: \"#A9A9A9\"\r\n          },\r\n          gridLines: {\r\n            display: true,\r\n            color: '#A9A9A9'\r\n        },\r\n        legend: {\r\n          display:false\r\n        }\r\n        }\r\n      }\r\n    return (\r\n      <div>\r\n          <Radar data={radarData} options = {chartOptions}/>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  export default MetricsChart;"]},"metadata":{},"sourceType":"module"}